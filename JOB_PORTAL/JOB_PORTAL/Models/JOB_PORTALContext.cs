// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace JOB_PORTAL.Models;

public partial class JOB_PORTALContext : DbContext
{
    public JOB_PORTALContext()
    {
    }

    public JOB_PORTALContext(DbContextOptions<JOB_PORTALContext> options)
        : base(options)
    {
    }

    public virtual DbSet<AcademicDetail> AcademicDetails { get; set; }

    public virtual DbSet<Application> Applications { get; set; }

    public virtual DbSet<Branch> Branches { get; set; }

    public virtual DbSet<Company> Companies { get; set; }

    public virtual DbSet<EmployerDetail> EmployerDetails { get; set; }

    public virtual DbSet<Job> Jobs { get; set; }

    public virtual DbSet<JobSeeker> JobSeekers { get; set; }

    public virtual DbSet<ProfessionalDetail> ProfessionalDetails { get; set; }

    public virtual DbSet<Skill> Skills { get; set; }

    public virtual DbSet<User> Users { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see https://go.microsoft.com/fwlink/?LinkId=723263.
        => optionsBuilder.UseSqlServer(new DbCredentials().CONNECTION_STRING);

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<AcademicDetail>(entity =>
        {
            entity.HasKey(e => e.AcademicId).HasName("PK__Academic__D9D65DD48B9F3F01");

            entity.ToTable("Academic_Details");

            entity.Property(e => e.AcademicId)
                .ValueGeneratedNever()
                .HasColumnName("Academic_ID");
            entity.Property(e => e.Cgpa)
                .HasColumnType("decimal(4, 2)")
                .HasColumnName("CGPA");
            entity.Property(e => e.Class)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.CollegeUniversityName)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("College_University_Name");
            entity.Property(e => e.EndYear).HasColumnName("End_Year");
            entity.Property(e => e.JobSeekerId).HasColumnName("JobSeeker_ID");
            entity.Property(e => e.StartYear).HasColumnName("Start_Year");

            entity.HasOne(d => d.JobSeeker).WithMany(p => p.AcademicDetails)
                .HasForeignKey(d => d.JobSeekerId)
                .HasConstraintName("FK__Academic___JobSe__4D94879B");
        });

        modelBuilder.Entity<Application>(entity =>
        {
            entity.HasKey(e => e.ApplicationId).HasName("PK__Applicat__E063E1CB155DCE44");

            entity.ToTable("Application");

            entity.Property(e => e.ApplicationId)
                .ValueGeneratedNever()
                .HasColumnName("Application_ID");
            entity.Property(e => e.ApplyDate).HasColumnName("Apply_Date");
            entity.Property(e => e.EmployerId).HasColumnName("Employer_ID");
            entity.Property(e => e.JobId).HasColumnName("Job_ID");
            entity.Property(e => e.JobSeekerId).HasColumnName("JobSeeker_ID");
            entity.Property(e => e.Status)
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.HasOne(d => d.Employer).WithMany(p => p.Applications)
                .HasForeignKey(d => d.EmployerId)
                .HasConstraintName("FK__Applicati__Emplo__5535A963");

            entity.HasOne(d => d.Job).WithMany(p => p.Applications)
                .HasForeignKey(d => d.JobId)
                .HasConstraintName("FK__Applicati__Job_I__534D60F1");

            entity.HasOne(d => d.JobSeeker).WithMany(p => p.Applications)
                .HasForeignKey(d => d.JobSeekerId)
                .HasConstraintName("FK__Applicati__JobSe__5441852A");
        });

        modelBuilder.Entity<Branch>(entity =>
        {
            entity.HasKey(e => e.BranchId).HasName("PK__Branch__12CEB04199AD45D3");

            entity.ToTable("Branch");

            entity.Property(e => e.BranchId)
                .ValueGeneratedNever()
                .HasColumnName("Branch_ID");
            entity.Property(e => e.BranchName)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("Branch_Name");
            entity.Property(e => e.CompanyId).HasColumnName("Company_ID");
            entity.Property(e => e.Location)
                .HasMaxLength(100)
                .IsUnicode(false);

            entity.HasOne(d => d.Company).WithMany(p => p.Branches)
                .HasForeignKey(d => d.CompanyId)
                .HasConstraintName("FK__Branch__Company___3C69FB99");
        });

        modelBuilder.Entity<Company>(entity =>
        {
            entity.HasKey(e => e.CompanyId).HasName("PK__Company__5F5D1932E8D06DBF");

            entity.ToTable("Company");

            entity.Property(e => e.CompanyId)
                .ValueGeneratedNever()
                .HasColumnName("Company_ID");
            entity.Property(e => e.CompanyName)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("Company_Name");
            entity.Property(e => e.EmailId)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("Email_ID");
        });

        modelBuilder.Entity<EmployerDetail>(entity =>
        {
            entity.HasKey(e => e.EmployerId).HasName("PK__Employer__6C37C549D8F1736C");

            entity.ToTable("Employer_Details");

            entity.Property(e => e.EmployerId)
                .ValueGeneratedNever()
                .HasColumnName("Employer_ID");
            entity.Property(e => e.BranchId).HasColumnName("Branch_ID");
            entity.Property(e => e.EmpName)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("Emp_Name");
            entity.Property(e => e.UserId).HasColumnName("User_ID");

            entity.HasOne(d => d.Branch).WithMany(p => p.EmployerDetails)
                .HasForeignKey(d => d.BranchId)
                .HasConstraintName("FK__Employer___Branc__403A8C7D");

            entity.HasOne(d => d.User).WithMany(p => p.EmployerDetails)
                .HasForeignKey(d => d.UserId)
                .HasConstraintName("FK__Employer___User___3F466844");
        });

        modelBuilder.Entity<Job>(entity =>
        {
            entity.HasKey(e => e.JobId).HasName("PK__Job__E76A7686E11F6487");

            entity.ToTable("Job");

            entity.Property(e => e.JobId)
                .ValueGeneratedNever()
                .HasColumnName("Job_ID");
            entity.Property(e => e.Description).HasColumnType("text");
            entity.Property(e => e.Domain)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.EmployerId).HasColumnName("Employer_ID");
            entity.Property(e => e.ExperienceLevel)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("Experience_Level");
            entity.Property(e => e.JobType)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("Job_Type");
            entity.Property(e => e.LastDate).HasColumnName("Last_Date");
            entity.Property(e => e.Location)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.PostingDate).HasColumnName("Posting_Date");
            entity.Property(e => e.Salary).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.SkillId).HasColumnName("Skill_ID");
            entity.Property(e => e.Title)
                .HasMaxLength(100)
                .IsUnicode(false);

            entity.HasOne(d => d.Employer).WithMany(p => p.Jobs)
                .HasForeignKey(d => d.EmployerId)
                .HasConstraintName("FK__Job__Employer_ID__4316F928");
        });

        modelBuilder.Entity<JobSeeker>(entity =>
        {
            entity.HasKey(e => e.JobSeekerId).HasName("PK__JobSeeke__75D13F11B27480F1");

            entity.ToTable("JobSeeker");

            entity.Property(e => e.JobSeekerId)
                .ValueGeneratedNever()
                .HasColumnName("JobSeeker_ID");
            entity.Property(e => e.AcademicId).HasColumnName("Academic_ID");
            entity.Property(e => e.Address).HasColumnType("text");
            entity.Property(e => e.Dob).HasColumnName("DOB");
            entity.Property(e => e.ExperienceLevel)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("Experience_Level");
            entity.Property(e => e.ProfessionalId).HasColumnName("Professional_ID");
            entity.Property(e => e.SkillId).HasColumnName("Skill_ID");
            entity.Property(e => e.UserId).HasColumnName("User_ID");

            entity.HasOne(d => d.User).WithMany(p => p.JobSeekers)
                .HasForeignKey(d => d.UserId)
                .HasConstraintName("FK__JobSeeker__User___46E78A0C");
        });

        modelBuilder.Entity<ProfessionalDetail>(entity =>
        {
            entity.HasKey(e => e.ProfessionalId).HasName("PK__Professi__C81884E7030381B3");

            entity.ToTable("Professional_Details");

            entity.Property(e => e.ProfessionalId)
                .ValueGeneratedNever()
                .HasColumnName("Professional_ID");
            entity.Property(e => e.CompanyName)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("Company_Name");
            entity.Property(e => e.Designation)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.FromDate).HasColumnName("From_Date");
            entity.Property(e => e.JobSeekerId).HasColumnName("JobSeeker_ID");
            entity.Property(e => e.ToDate).HasColumnName("To_Date");

            entity.HasOne(d => d.JobSeeker).WithMany(p => p.ProfessionalDetails)
                .HasForeignKey(d => d.JobSeekerId)
                .HasConstraintName("FK__Professio__JobSe__5070F446");
        });

        modelBuilder.Entity<Skill>(entity =>
        {
            entity.HasKey(e => e.SkillId).HasName("PK__Skill__B4A9E2B0AF7E3C33");

            entity.ToTable("Skill");

            entity.Property(e => e.SkillId)
                .ValueGeneratedNever()
                .HasColumnName("Skill_ID");
            entity.Property(e => e.ExpertLevel)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("Expert_Level");
            entity.Property(e => e.JobId).HasColumnName("Job_ID");
            entity.Property(e => e.JobSeekerId).HasColumnName("JobSeeker_ID");
            entity.Property(e => e.SkillName)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("Skill_Name");

            entity.HasOne(d => d.Job).WithMany(p => p.Skills)
                .HasForeignKey(d => d.JobId)
                .HasConstraintName("FK__Skill__Job_ID__4AB81AF0");

            entity.HasOne(d => d.JobSeeker).WithMany(p => p.Skills)
                .HasForeignKey(d => d.JobSeekerId)
                .HasConstraintName("FK__Skill__JobSeeker__49C3F6B7");
        });

        modelBuilder.Entity<User>(entity =>
        {
            entity.HasKey(e => e.UserId).HasName("PK__Users__206D9190B2F70FC7");

            entity.Property(e => e.UserId)
                .ValueGeneratedNever()
                .HasColumnName("User_ID");
            entity.Property(e => e.EmailId)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("Email_ID");
            entity.Property(e => e.UserProfile).HasColumnName("User_Profile");
            entity.Property(e => e.UserType)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("User_Type");
            entity.Property(e => e.Username)
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}